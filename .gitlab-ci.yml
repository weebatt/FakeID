stages:
  - build
  - test

image: golang:1.24

build_auth_service:
  stage: build
  script:
    - cd auth-service
    - go build -o auth-service ./cmd/main.go
  artifacts:
    paths:
      - auth-service/auth-service
    expire_in: 1 week

build_task_service:
  stage: build
  script:
    - cd task-service
    - go build -o task-service ./cmd
  artifacts:
    paths:
      - task-service/task-service
    expire_in: 1 week

build_template_service:
  stage: build
  script:
    - cd task-service
    - go build -o template-service ./cmd
  artifacts:
    paths:
      - template-service/template-service
    expire_in: 1 week

test_auth_service:
  stage: test
  script:
    - cd auth-service
    - go test -v -coverprofile=coverage.out ./...
    - go tool cover -func=coverage.out | grep total | awk '{print $3}' > coverage.txt || echo "0%" > coverage.txt
    - COVERAGE=$(cat coverage.txt | sed 's/%//')
    - MIN_COVERAGE=30
    - |
      if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
        echo "Ошибка: Покрытие тестами $COVERAGE% ниже порога $MIN_COVERAGE% для auth-service"
        exit 1
      else
        echo "Покрытие тестами $COVERAGE% соответствует порогу $MIN_COVERAGE% для auth-service"
      fi
  artifacts:
    paths:
      - auth-service/coverage.out
    expire_in: 1 week

test_task_service:
  stage: test
  script:
    - cd task-service
    - go test -v -coverprofile=coverage.out ./...
    - go tool cover -func=coverage.out | grep total | awk '{print $3}' > coverage.txt || echo "0%" > coverage.txt
    - COVERAGE=$(cat coverage.txt | sed 's/%//')
    - MIN_COVERAGE=30
    - |
      if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
        echo "Ошибка: Покрытие тестами $COVERAGE% ниже порога $MIN_COVERAGE% для task-service"
        exit 1
      else
        echo "Покрытие тестами $COVERAGE% соответствует порогу $MIN_COVERAGE% для task-service"
      fi
  artifacts:
    paths:
      - task-service/coverage.out
    expire_in: 1 week